# Generated by Django 2.0.5 on 2018-06-19 06:27

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import sorp_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.PositiveIntegerField(unique=True)),
                ('name', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.PositiveIntegerField(unique=True)),
                ('name', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Documents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_name', models.CharField(max_length=500)),
                ('doc_imp', models.CharField(choices=[('M', 'Mandatory'), ('O', 'Optional'), ('NA', 'Not Applicable')], default='M', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Due',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('library_due', models.DecimalField(decimal_places=4, default=Decimal('0'), max_digits=10)),
                ('hostel_due', models.DecimalField(decimal_places=4, default=Decimal('0'), max_digits=10)),
                ('academic_due', models.DecimalField(decimal_places=4, default=Decimal('0'), max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.SmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], default=1)),
                ('sgpi', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=4)),
                ('cgpi', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=4)),
            ],
        ),
        migrations.CreateModel(
            name='StudentFirstFeeStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_josaa_amount', models.PositiveIntegerField()),
                ('fee_josaa_date', models.DateField(default=None)),
                ('fee_NITH_amount', models.PositiveIntegerField()),
                ('fee_nith_date', models.DateField(default=None)),
                ('fee_NIT_receipt_no', models.CharField(max_length=25)),
                ('fee_total', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='StudentInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(default='def_profile_pic.jpg', upload_to=sorp_app.models.get_image_path)),
                ('name_eng', models.CharField(max_length=60)),
                ('name_hindi', models.CharField(max_length=60, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('dob', models.DateField()),
                ('religion', models.CharField(max_length=20)),
                ('contact', models.CharField(max_length=20, null=True)),
                ('aadhar_no', models.CharField(max_length=16, null=True, unique='True')),
                ('area', models.CharField(choices=[('Rural', 'Rural'), ('Urban', 'Urban')], max_length=10)),
                ('bonafide_country', models.CharField(max_length=30)),
                ('bonafide_state', models.CharField(max_length=30)),
                ('nearest_railway_st', models.CharField(max_length=70)),
                ('correspondence_add', models.CharField(max_length=1000)),
                ('permanent_add', models.CharField(max_length=1000)),
                ('year_of_admission', models.IntegerField(default=sorp_app.models.currYear)),
                ('jee_roll_no', models.BigIntegerField()),
                ('jee_score', models.PositiveIntegerField()),
                ('jee_AI_rank', models.PositiveIntegerField()),
                ('jee_category_rank', models.PositiveIntegerField(null=True)),
                ('intermediate_country', models.CharField(max_length=30)),
                ('intermediate_state', models.CharField(max_length=30)),
                ('intermediate_percentage', models.DecimalField(db_column='12th Percentage', decimal_places=3, max_digits=5)),
                ('intermediate_pass_year', models.IntegerField(db_column='10+2 Pass Year', default=sorp_app.models.currYear)),
                ('intermediate_school_type', models.CharField(choices=[('Government', 'Government School'), ('Private', 'Private School')], db_column='12th School type', max_length=20)),
                ('intermediate_school_area', models.CharField(choices=[('Rural', 'Rural'), ('Urban', 'Urban')], db_column='12th School Area', max_length=10)),
                ('intermediate_school_name', models.CharField(db_column='12th School name', max_length=60)),
                ('ug_sem', models.SmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], default=1)),
                ('hosteler', models.BooleanField()),
                ('hostel_name', models.CharField(choices=[('KBH', 'Kailash Boys Hostel'), ('Satpura', 'Satpuara Hostel'), ('Himadri', 'Himadri Boys Hostel'), ('Himgiri', 'Himgiri Boys Hostel'), ('NBH', 'Neelkanth Boys Hostel'), ('MMH', 'Manimahesh Boys Hostel'), ('VBH', 'Vindhyanchal Boys Hostel'), ('DBH', 'Dauladhar Boys Hostel'), ('AGH', 'Ambika Girls Hostel'), ('PGH', 'Parvati Girls Hostel')], max_length=50, null=True)),
                ('entry_no', models.PositiveIntegerField(default=None, unique=True)),
                ('reg_no', models.CharField(max_length=50, unique=True)),
                ('roll_no', models.CharField(max_length=10, unique=True)),
                ('active_status', models.BooleanField(default=True)),
                ('father_name', models.CharField(max_length=60)),
                ('father_contact', models.CharField(max_length=20)),
                ('father_email', models.EmailField(max_length=254)),
                ('mother_name', models.CharField(max_length=60)),
                ('mother_contact', models.CharField(max_length=20)),
                ('mother_email', models.EmailField(max_length=254)),
                ('guardian_name', models.CharField(max_length=60)),
                ('guardian_contact', models.CharField(max_length=20)),
                ('guardian_email', models.EmailField(max_length=254)),
                ('family_income', models.PositiveIntegerField(default=0)),
                ('fee_waiver_claim', models.CharField(max_length=60)),
                ('category_admission', models.ForeignKey(db_column='Admitted Category', on_delete=django.db.models.deletion.PROTECT, related_name='admission', to='sorp_app.Category')),
                ('category_main', models.ForeignKey(db_column='Main Category', on_delete=django.db.models.deletion.PROTECT, related_name='main', to='sorp_app.Category')),
                ('intermediate_school_board', models.ForeignKey(db_column='12th Board', on_delete=django.db.models.deletion.PROTECT, to='sorp_app.Board')),
                ('stud_doc', models.ManyToManyField(through='sorp_app.DocumentInfo', to='sorp_app.Documents')),
            ],
        ),
        migrations.CreateModel(
            name='StudentMedicalInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField()),
                ('identification_mark', models.CharField(max_length=40)),
                ('major_illness', models.CharField(max_length=40)),
                ('blood_group', models.CharField(max_length=5)),
                ('vision', models.CharField(max_length=3)),
                ('height_in_cm', models.SmallIntegerField()),
                ('past_mental_illness', models.CharField(max_length=30)),
                ('clour_blindness', models.CharField(max_length=10)),
                ('any_other_defect', models.CharField(max_length=30)),
                ('student', models.OneToOneField(default=0, on_delete=django.db.models.deletion.CASCADE, to='sorp_app.StudentInfo')),
            ],
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('semester', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)])),
                ('sub_code', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('sub_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='UGBranch',
            fields=[
                ('name', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10)),
                ('section', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='UGClass',
            fields=[
                ('id', models.PositiveIntegerField(unique=True)),
                ('name', models.CharField(max_length=25, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=60)),
            ],
        ),
        migrations.AddField(
            model_name='subjects',
            name='branch',
            field=models.ForeignKey(db_column='branch', on_delete=django.db.models.deletion.CASCADE, to='sorp_app.UGBranch'),
        ),
        migrations.AddField(
            model_name='subjects',
            name='classname',
            field=models.ForeignKey(db_column='class', on_delete=django.db.models.deletion.CASCADE, to='sorp_app.UGClass'),
        ),
        migrations.AddField(
            model_name='studentinfo',
            name='ug_branch',
            field=models.ForeignKey(db_column='UGBranch', on_delete=django.db.models.deletion.PROTECT, to='sorp_app.UGBranch'),
        ),
        migrations.AddField(
            model_name='studentinfo',
            name='ug_class',
            field=models.ForeignKey(db_column='UGClass', on_delete=django.db.models.deletion.PROTECT, to='sorp_app.UGClass'),
        ),
        migrations.AddField(
            model_name='studentinfo',
            name='user',
            field=models.OneToOneField(default=0, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='studentfirstfeestatus',
            name='student',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sorp_app.StudentInfo'),
        ),
        migrations.AddField(
            model_name='result',
            name='roll_no',
            field=models.OneToOneField(db_column='roll_no', on_delete=django.db.models.deletion.CASCADE, to='sorp_app.StudentInfo', to_field='roll_no'),
        ),
        migrations.AddField(
            model_name='due',
            name='roll_no',
            field=models.OneToOneField(db_column='roll_no', on_delete=django.db.models.deletion.CASCADE, to='sorp_app.StudentInfo', to_field='roll_no'),
        ),
        migrations.AddField(
            model_name='documentinfo',
            name='document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sorp_app.Documents'),
        ),
        migrations.AddField(
            model_name='documentinfo',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sorp_app.StudentInfo'),
        ),
    ]
